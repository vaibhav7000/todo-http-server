// creating todo application http server
const express = require("express");
const app = express();
let autoGeneratedID = 0;
const storage = [];
const port = 3000;

app.use(express.json()); // middleware function (because of the app.use) no route specified => will be called for every request coming to the http server / matches with every route coming from the client

app.get("/todos", function (req, res) {
    res.status(200).json(storage);
})

// returning the todo based on the id (that will be send using the route parameters)
app.get("/todos/:id", function(req, res) {
    // checking if the id is contains only numbers as string
    const id = req.params.id;
    if(!isOnlyNumbers(id) || !storage.length){
        res.status(404).send("Not kjbr Found")
        return;
    }

    const todo = storage.find(t => t.id == id);
    
    if(!todo) {
        res.status(404).send("Not jkbrg Found")
        return
    }

    res.status(200).json(todo);
})

app.post("/todos", function (req, res) {
    const todo = req.body;

    try {
        if(!todo) {
            const error =  new Error("Pass a valid todo inputs"); // will be passed as message
            error.statusCode = 411
            throw error
        }

        if(!todo.title || !todo.description) {
            const error = new Error("Pass a valid todo inputs");
            error.statusCode = 411;
            throw error
        }

        // all validated => adding the todo in the storage
        todo.id = autoGeneratedID;
        todo.completed = false;
        autoGeneratedID++;

        storage.push(todo);

        res.status(201).json({
            id: todo.id
        })
    } catch(err) {
        // 411 is used for the invalid inputs send from client / frontend
        res.status(err.statusCode).json({
            msg: err.message
        })
    }
})



// if no route matching with the above routes send from the client => this will match because it does not have any route
app.use(function (req, res) {
    res.status(404).send("Route not found")
})

function isOnlyNumbers(str) {
  return /^\d+$/.test(str);
}

app.listen(port);